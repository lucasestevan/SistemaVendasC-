<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnRelatorio.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAB3RJ
        TUUH4wsJDxEDl1CIgAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAONSURBVHhe
        5ZvL601RFMd/XoW8BoiiSIwwMaEMzShK/SQSf4HXAHPJmBIZKEPCTJ4zUqbejDDySElIiO/39ju1rb32
        +d1997rWvfv3rU+3c85ee6+1zr53n7XvvSOVaSU4D96AH2OvPF4Bqtc28BX8UeD5raBarQXfgRZ8wzew
        GlSpa0ALWnIFVKdpYLy738BZMBVUpUVACzbFYlCVpgDeWS1YyW8wHVSljeAL0AKW3APVaBI4Cn4CLViN
        zaAKzQfXgRZkiuOgCnHKvwUyQJ47DB4F58gLMAqGRlzWdoOL4AY4BxgAl6/UlOds4KxoxJVhPVjeORoi
        rQJPgAyQfFLOMRlMCj8Phl4LAIsXGWQKTnm+HarRaaAFqiGn/NBrMvgItGAlH0AVUz7UQqAFm2IuqEqz
        gRZoijngv4m7KRvGXvupZ0ALVsJ1XYpvoXVgUwu8nvXW2QVegXBwHu8E1poJHoJwrBT7gRTrfK2t5DLo
        SieB1kHDCWAlBn8XaONI7gBZz+d+frB9q7h3phlKtoBSpYJn2Roe/wJngFbKLgNh2/Fg+1Y9AJqh5D4o
        USp4zi4+yu4BR8BesASkZJoAOiWzn4LtZoBe1BZ8rkwTwO0izShFL9tLlsFTpgnI2WAkNwGXyG5lHTxl
        mgDqKtAM22DZGiaCieQyypL2FrgAdgDr4CnzBPDLg5xZEMJEbAePg3NtlAZPmSeA4lKY+pqJG5CnAIsS
        7Xq3WARP9SUBFB99uRvzGvCLRr6eBc0uyyzAzYheEsGZYqW+JaBbMRHHQE4i3gGpg+Az0No38PoBEMo9
        AY1yHQk3NFjd8WlPaydhu7AaHJgEzAPagCmsghiYBFAvgTaohFVlqGoScAhog0pkSVtNAvgApD3shGgl
        bTUJoFggcbmUH2r9KmnNE8ANA05RlqIpeH28jYWlYB9g+36WtKYJ4N7ac6AZSriHZ7U9PTAJ4F3SjFK0
        3dUcDUwCTDvLUMm4pj6bdpahknFNfTbtLEMl45r6bNpZhkrGNfXZtLMMlYxr6nNpZx4lbanP/6ikM6+S
        tsQ2kpcjXraRvBzxso3k5YiXbSQvR7xsI3k54mUbycsRL9tIXo542UbycsTLNpKXI162kbwc8bKN5OWI
        l20kL0e8bCN5OeJl29EacAncBvxTkWaUgu1pN4y2jLnzT9KnQGs4EeCfM0beBycmGp3fKfDHSxMxCQh+
        ZPQvOd+U3fkozaYAAAAASUVORK5CYII=
</value>
  </data>
</root>